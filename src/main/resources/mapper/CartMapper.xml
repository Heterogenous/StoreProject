<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rain.mapper.CartMapper">
    <sql id="allColumn">
        cid,uid,pid,price,num,created_user,created_time,modified_user,modified_time
    </sql>
    <sql id="exceptCid">
        uid,pid,price,num,created_user,created_time,modified_user,modified_time
    </sql>
    <sql id="exceptCreatedAndModified">
        cid,uid,pid,price,num,created_user
    </sql>
    <resultMap id="cartEntityMap" type="com.rain.entity.Cart">
        <id column="cid" property="cid"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

    <!--
        Integer insert(Cart cart);
    -->
    <insert id="insert" parameterType="com.rain.entity.Cart">
        insert into t_cart(<include refid="exceptCid"/>) values (#{uid},#{pid},#{price},#{num},
        #{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime})
    </insert>

    <!--
        Cart findByUidAndPid(Integer uid,Integer pid);
    -->
    <select id="findByUidAndPid" resultMap="cartEntityMap">
        select <include refid="exceptCreatedAndModified"/> from t_cart where uid = #{uid} and pid = #{pid}
    </select>

    <!--
        Integer updateCart(Cart cart);
    -->
    <update id="updateCart" parameterType="com.rain.entity.Cart">
        update t_cart
        <set>
            <if test="price != null and price >=0 " >
                price = #{price},
            </if>
            <if test="num != null and num >= 0">
                num = #{num},
            </if>
        </set>
        where cid = #{cid}
    </update>

    <!--
        List<Cart> findByUid(Integer uid);
    -->
    <select id="findByUid" resultMap="cartEntityMap">
        select <include refid="exceptCreatedAndModified"/>
        from t_cart
        where uid = #{uid}
        order by modified_time DESC,
                 created_time DESC
    </select>
    <!--
        Integer batchDelete(List<Integer> listCid);
    -->
    <delete id="batchDelete" parameterType="int">
        delete from t_cart where cid IN
        <foreach collection="list" item="cid" open="(" close=")" separator=",">
            #{cid}
        </foreach>
    </delete>

    <!--
        List<CartDTO> findByUidWithProduct(Integer uid)
    -->
    <resultMap id="cartDTOMap" type="com.rain.entity.CartDTO">
        <id column="cid" property="cart.cid"/>
        <result column="uid" property="cart.uid"/>
        <result column="pid" property="cart.pid"/>
        <result column="c_price" property="cart.price"/>
        <result column="c_num" property="cart.num"/>
        <result column="image" property="image"/>
        <result column="title" property="title"/>
        <result column="realPrice" property="realPrice"/>
    </resultMap>
    <select id="findByUidWithProduct" resultMap="cartDTOMap">
        select cid,uid,pid,t_cart.price c_price,t_cart.num c_num,image,title,t_product.price realPrice
        from t_cart Join t_product
            on t_cart.pid = t_product.id
        where uid = #{uid} order by t_cart.created_time DESC
    </select>
</mapper>